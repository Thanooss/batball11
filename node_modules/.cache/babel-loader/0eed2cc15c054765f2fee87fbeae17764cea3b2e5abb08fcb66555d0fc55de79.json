{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharun\\\\Desktop\\\\batball\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\n//import React, { useEffect } from \"react\"\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//import User from \"./User.js\"\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [Isuservalid, setUserValidityState] = useState(false);\n  const handleSubmit = async () => {\n    try {\n      // Send login details to the server for verification\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUserValidityState(true);\n        console.log('Login successful:', data.message);\n        navigate(`/user/${username}`);\n      } else {\n        const errorData = await response.json();\n        console.error('login failed:', errorData.message);\n        setUserValidityState(false);\n        alert(errorData.message);\n      }\n\n      // Assuming the server responds with a success message\n\n      // If login is successful, you can redirect to the next step or perform other actions\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n  };\n  // useEffect(()=>{\n\n  // if(Isuservalid){\n  //   navigate(`/user/${username}`)\n  // }\n  // else{\n  //   alert('invalid credentials')\n  // }},[Isuservalid])\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container  d-flex  border border-primary \",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"border p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control border border-primary\",\n        value: username,\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control border border-primary\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleSubmit,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n}\n_s(Login, \"J5seGnWeL9RZ6hd33Q4TpjzJ9i0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","username","setUsername","password","setPassword","Isuservalid","setUserValidityState","handleSubmit","response","fetch","method","headers","body","JSON","stringify","ok","data","json","console","log","message","errorData","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tharun/Desktop/batball/src/login.js"],"sourcesContent":["//import React, { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import User from \"./User.js\"\r\nexport default function Login(){\r\n  const navigate=useNavigate();\r\n    const [username,setUsername]=useState('')\r\n    const [password,setPassword]=useState('');\r\n    const[Isuservalid,setUserValidityState]=useState(false)\r\n    const handleSubmit=  async ()=>{\r\n        try {\r\n        // Send login details to the server for verification\r\n        const response = await fetch('http://localhost:3001/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ username, password }),\r\n        });\r\n        if(response.ok){\r\n          const data=await response.json();\r\n          setUserValidityState(true);\r\n          console.log('Login successful:', data.message);\r\n          navigate(`/user/${username}`)\r\n        }\r\n        else{\r\n          const errorData=await response.json();\r\n          console.error('login failed:',errorData.message);\r\n          setUserValidityState(false)\r\n          alert(errorData.message)\r\n        }\r\n  \r\n        // Assuming the server responds with a success message\r\n        \r\n  \r\n        // If login is successful, you can redirect to the next step or perform other actions\r\n       \r\n      } catch (error) {\r\n        console.error('Login failed:', error);\r\n      }\r\n      \r\n\r\n      \r\n\r\n    };\r\n    // useEffect(()=>{\r\n\r\n    \r\n    // if(Isuservalid){\r\n    //   navigate(`/user/${username}`)\r\n    // }\r\n    // else{\r\n    //   alert('invalid credentials')\r\n    // }},[Isuservalid])\r\n    return(<div className=\"container  d-flex  border border-primary \">\r\n      <form className=\"border p-5\">\r\n        <label className=\"form-label\" >username</label>\r\n        <input type=\"text\" className=\"form-control border border-primary\" value={username} onChange={(e)=>{\r\n            setUsername(e.target.value)\r\n        }}></input>\r\n        <br></br>\r\n        <label className=\"form-label\">password</label>\r\n        <input type=\"password\" className=\"form-control border border-primary\" value={password} onChange={(e)=>{\r\n         setPassword(e.target.value);\r\n        }} ></input>\r\n        <br></br>\r\n        <button className=\"btn btn-primary\" onClick={handleSubmit}>submit</button>\r\n        \r\n        \r\n        </form></div>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}