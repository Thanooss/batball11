{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharun\\\\Desktop\\\\batball\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [Isuservalid, setUserValidityState] = useState(false);\n  const handleSubmit = async () => {\n    try {\n      // Send login details to the server for verification\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      console.log(response.data.message);\n\n      // Assuming the server responds with a success message\n      const data = await response.json();\n      setUserValidityState(true);\n\n      // If login is successful, you can redirect to the next step or perform other actions\n      console.log('Login successful:', data);\n    } catch (error) {\n      console.error('Login failed:', error);\n    }\n    if (Isuservalid) {\n      navigate(`/user/${username}`);\n    } else {\n      alert('invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => {\n        setUsername(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => {\n        setPassword(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"r7gIKgX8fatEhvx1DAdcEtKdMYo=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","username","setUsername","password","setPassword","Isuservalid","setUserValidityState","handleSubmit","response","fetch","method","headers","body","JSON","stringify","console","log","data","message","json","error","navigate","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Tharun/Desktop/batball/src/login.js"],"sourcesContent":["import React from \"react\"\r\nimport { useState } from \"react\"\r\nexport default function Login(){\r\n    const [username,setUsername]=useState('')\r\n    const [password,setPassword]=useState('');\r\n    const[Isuservalid,setUserValidityState]=useState(false)\r\n    const handleSubmit=  async ()=>{\r\n        try {\r\n        // Send login details to the server for verification\r\n        const response = await fetch('http://localhost:3001/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ username, password }),\r\n        });\r\n        console.log(response.data.message)\r\n  \r\n        // Assuming the server responds with a success message\r\n        const data = await response.json();\r\n        setUserValidityState(true);\r\n  \r\n        // If login is successful, you can redirect to the next step or perform other actions\r\n        console.log('Login successful:', data);\r\n      } catch (error) {\r\n        console.error('Login failed:', error);\r\n      }\r\n      if(Isuservalid){\r\n        navigate(`/user/${username}`)\r\n      }\r\n      else{\r\n        alert('invalid credentials')\r\n      }\r\n\r\n    };\r\n    return(<>\r\n        <label>username</label>\r\n        <input type=\"text\" value={username} onChange={(e)=>{\r\n            setUsername(e.target.value)\r\n        }}></input>\r\n        <br></br>\r\n        <label>password</label>\r\n        <input type=\"password\" value={password} onChange={(e)=>{\r\n         setPassword(e.target.value);\r\n        }} ></input>\r\n        <br></br>\r\n        <button onClick={handleSubmit}>submit</button>\r\n        \r\n        </>)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}