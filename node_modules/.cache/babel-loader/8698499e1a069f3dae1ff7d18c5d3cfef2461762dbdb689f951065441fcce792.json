{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharun\\\\Desktop\\\\batball\\\\src\\\\login.js\",\n  _s = $RefreshSig$();\n//import React, { useEffect } from \"react\"\n//import { useState } from \"react\"\n//import { useNavigate } from \"react-router-dom\";\nimport User from \"./User.js\";\n// export default function Login(){\n//const navigate=useNavigate();\n//     const [username,setUsername]=useState('')\n//     const [password,setPassword]=useState('');\n//    \n//     const handleSubmit=  async ()=>{\n//         try {\n//         // Send login details to the server for verification\n//         const response = await fetch('http://localhost:3001/login', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify({ username, password }),\n//         });\n//         const data=await response.json();\n//         if(response.ok){\n//           console.log(response.ok);\n\n//           setUserValidityState(true);\n//           console.log('Login successful:', data.message);\n//           const user_id=data.user_id;\n//           console.log(data.user_id);\n//           navigate(`/user?user_id=${user_id}`)\n//         }\n//         else{\n//           setUserValidityState(false)\n//           alert(data.message)\n//         }\n\n//         // Assuming the server responds with a success message\n\n//         // If login is successful, you can redirect to the next step or perform other actions\n\n//       } catch (error) {\n//         alert(error.message)\n//       }\n\n//     };\n// useEffect(()=>{\n\n//     if(Isuservalid){\n//       navigate(`/user/${username}`)\n//     }\n//     else{\n//       alert('invalid credentials')\n//     }},[Isuservalid])\n//     return(<div className=\"container p-5    border border-primary  \">\n\n//         <label className=\"form-label\" >username</label>\n//         <input type=\"text\" className=\"form-control border border-primary\" value={username} onChange={(e)=>{\n//             setUsername(e.target.value)\n//         }}></input>\n//         <br/>\n//         <label className=\"form-label\">password</label>\n//         <input type=\"password\" className=\"form-control border border-primary\" value={password} onChange={(e)=>{\n//          setPassword(e.target.value);\n//         }} ></input>\n//         <br></br>\n//         <button className=\"btn btn-primary\" onClick={handleSubmit}>submit</button>\n\n//         </div>)\n// }\nimport React, { useState, useEffect } from \"react\";\nimport { TextField, Button } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const navigate = useNavigate();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [userValidityState, setUserValidityState] = useState(false);\n  const handleSubmit = async () => {\n    try {\n      // Send login details to the server for verification\n      const response = await fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log(response.ok);\n        setUserValidityState(true);\n        console.log('Login successful:', data.message);\n        const user_id = data.user_id;\n        console.log(data.user_id);\n        navigate(`/user?user_id=${user_id}`);\n      } else {\n        setUserValidityState(false);\n        alert(data.message);\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  useEffect(() => {\n    if (Isuservalid) {\n      navigate(`/user/${username}`);\n    } else {\n      alert('invalid credentials');\n    }\n  }, [userValidityState]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container p-5 border border-primary\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      variant: \"outlined\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      type: \"password\",\n      label: \"Password\",\n      variant: \"outlined\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      fullWidth: true,\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSubmit,\n      fullWidth: true,\n      style: {\n        marginTop: '1rem'\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"SpzH6MDL7GKncwbZk4lCs/UaIx4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["User","React","useState","useEffect","TextField","Button","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","username","setUsername","password","setPassword","userValidityState","setUserValidityState","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","message","user_id","alert","error","Isuservalid","className","children","label","variant","value","onChange","e","target","fullWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","color","onClick","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Tharun/Desktop/batball/src/login.js"],"sourcesContent":["//import React, { useEffect } from \"react\"\r\n//import { useState } from \"react\"\r\n//import { useNavigate } from \"react-router-dom\";\r\nimport User from \"./User.js\"\r\n// export default function Login(){\r\n  //const navigate=useNavigate();\r\n//     const [username,setUsername]=useState('')\r\n//     const [password,setPassword]=useState('');\r\n//    \r\n//     const handleSubmit=  async ()=>{\r\n//         try {\r\n//         // Send login details to the server for verification\r\n//         const response = await fetch('http://localhost:3001/login', {\r\n//           method: 'POST',\r\n//           headers: {\r\n//             'Content-Type': 'application/json',\r\n//           },\r\n//           body: JSON.stringify({ username, password }),\r\n//         });\r\n//         const data=await response.json();\r\n//         if(response.ok){\r\n//           console.log(response.ok);\r\n         \r\n//           setUserValidityState(true);\r\n//           console.log('Login successful:', data.message);\r\n//           const user_id=data.user_id;\r\n//           console.log(data.user_id);\r\n//           navigate(`/user?user_id=${user_id}`)\r\n//         }\r\n//         else{\r\n//           setUserValidityState(false)\r\n//           alert(data.message)\r\n//         }\r\n  \r\n//         // Assuming the server responds with a success message\r\n        \r\n  \r\n//         // If login is successful, you can redirect to the next step or perform other actions\r\n       \r\n//       } catch (error) {\r\n//         alert(error.message)\r\n//       }\r\n      \r\n\r\n      \r\n\r\n//     };\r\n// useEffect(()=>{\r\n\r\n    \r\n//     if(Isuservalid){\r\n//       navigate(`/user/${username}`)\r\n//     }\r\n//     else{\r\n//       alert('invalid credentials')\r\n//     }},[Isuservalid])\r\n//     return(<div className=\"container p-5    border border-primary  \">\r\n      \r\n//         <label className=\"form-label\" >username</label>\r\n//         <input type=\"text\" className=\"form-control border border-primary\" value={username} onChange={(e)=>{\r\n//             setUsername(e.target.value)\r\n//         }}></input>\r\n//         <br/>\r\n//         <label className=\"form-label\">password</label>\r\n//         <input type=\"password\" className=\"form-control border border-primary\" value={password} onChange={(e)=>{\r\n//          setPassword(e.target.value);\r\n//         }} ></input>\r\n//         <br></br>\r\n//         <button className=\"btn btn-primary\" onClick={handleSubmit}>submit</button>\r\n        \r\n        \r\n//         </div>)\r\n// }\r\nimport React, { useState,useEffect } from \"react\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function Login() {\r\n  const navigate = useNavigate();\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userValidityState, setUserValidityState] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      // Send login details to the server for verification\r\n      const response = await fetch('http://localhost:3001/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        console.log(response.ok);\r\n        setUserValidityState(true);\r\n        console.log('Login successful:', data.message);\r\n        const user_id = data.user_id;\r\n        console.log(data.user_id);\r\n        navigate(`/user?user_id=${user_id}`);\r\n      } else {\r\n        setUserValidityState(false);\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n\r\n    \r\n    if(Isuservalid){\r\n      navigate(`/user/${username}`)\r\n    }\r\n    else{\r\n      alert('invalid credentials')\r\n    }},[userValidityState])\r\n\r\n  return (\r\n    <div className=\"container p-5 border border-primary\">\r\n      <TextField\r\n        label=\"Username\"\r\n        variant=\"outlined\"\r\n        value={username}\r\n        onChange={(e) => setUsername(e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <TextField\r\n        type=\"password\"\r\n        label=\"Password\"\r\n        variant=\"outlined\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        fullWidth\r\n        margin=\"normal\"\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleSubmit}\r\n        fullWidth\r\n        style={{ marginTop: '1rem' }}\r\n      >\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}