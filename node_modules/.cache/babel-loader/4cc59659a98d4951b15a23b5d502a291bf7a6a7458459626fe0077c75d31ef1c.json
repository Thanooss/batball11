{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tharun\\\\Desktop\\\\batball\\\\src\\\\Contests.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Contests() {\n  _s();\n  const [contests, setContests] = useState([]);\n  useEffect(() => {\n    try {\n      const fetch = async () => {\n        const response = await axios.get('http://localhost:3001/contest:match_id');\n        setContests(response.data);\n      };\n    } catch (error) {\n      console.error('error while fetching data', error);\n    }\n    fetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: contests.map(contest => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: contest.total_spots\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: contest.contest_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: contest.spots_filled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: contest.entryfee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: contest.winning_amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false);\n}\n_s(Contests, \"a5dITUgsuKD4BXTrOt7LUvmKhMI=\");\n_c = Contests;\nvar _c;\n$RefreshReg$(_c, \"Contests\");","map":{"version":3,"names":["React","useState","axios","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Contests","_s","contests","setContests","fetch","response","get","data","error","console","children","map","contest","total_spots","fileName","_jsxFileName","lineNumber","columnNumber","contest_name","spots_filled","entryfee","winning_amount","_c","$RefreshReg$"],"sources":["C:/Users/Tharun/Desktop/batball/src/Contests.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nexport default function Contests(){\r\n    const[contests,setContests]=useState([])\r\n    useEffect(()=>{\r\n        try{\r\n    const fetch=async()=>{\r\n        const response= await axios.get('http://localhost:3001/contest:match_id');\r\n        setContests(response.data)\r\n    }}\r\n    catch(error){\r\n         console.error('error while fetching data',error)\r\n    }\r\n    fetch();\r\n    },[])\r\n    return(<>\r\n       {\r\n        contests.map((contest)=>{\r\n            return(<div>\r\n                <p>{contest.total_spots}</p>\r\n                <label>{contest.contest_name}</label>\r\n                <p>{contest.spots_filled}</p>\r\n                <p>{contest.entryfee}</p>\r\n                <p>{contest.winning_amount}</p>\r\n            </div>)\r\n        })\r\n       }\r\n\r\n    </>)\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClC,eAAe,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EAC9B,MAAK,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EACxCE,SAAS,CAAC,MAAI;IACV,IAAG;MACP,MAAMS,KAAK,GAAC,MAAAA,CAAA,KAAS;QACjB,MAAMC,QAAQ,GAAE,MAAMX,KAAK,CAACY,GAAG,CAAC,wCAAwC,CAAC;QACzEH,WAAW,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC;IAAA,CAAC,CACF,OAAMC,KAAK,EAAC;MACPC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAACA,KAAK,CAAC;IACrD;IACAJ,KAAK,CAAC,CAAC;EACP,CAAC,EAAC,EAAE,CAAC;EACL,oBAAOP,OAAA,CAAAE,SAAA;IAAAW,QAAA,EAEHR,QAAQ,CAACS,GAAG,CAAEC,OAAO,IAAG;MACpB,oBAAOf,OAAA;QAAAa,QAAA,gBACHb,OAAA;UAAAa,QAAA,EAAIE,OAAO,CAACC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BpB,OAAA;UAAAa,QAAA,EAAQE,OAAO,CAACM;QAAY;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrCpB,OAAA;UAAAa,QAAA,EAAIE,OAAO,CAACO;QAAY;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BpB,OAAA;UAAAa,QAAA,EAAIE,OAAO,CAACQ;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBpB,OAAA;UAAAa,QAAA,EAAIE,OAAO,CAACS;QAAc;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IACV,CAAC;EAAC,gBAGJ,CAAC;AACP;AAAChB,EAAA,CA3BuBD,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}